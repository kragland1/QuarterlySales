// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuarterlySales.Models;

#nullable disable

namespace QuarterlySales.Migrations
{
    [DbContext(typeof(SalesContext))]
    [Migration("20230430213022_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuarterlySales.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime?>("DOB")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfHire")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DOB = new DateTime(1977, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(1996, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Billy Bob",
                            Lastname = "Jonah",
                            ManagerId = 0
                        },
                        new
                        {
                            EmployeeId = 3,
                            DOB = new DateTime(1988, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2006, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Chris",
                            Lastname = "Storm",
                            ManagerId = 0
                        },
                        new
                        {
                            EmployeeId = 2,
                            DOB = new DateTime(1989, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2010, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "David",
                            Lastname = "Ferrari",
                            ManagerId = 1
                        },
                        new
                        {
                            EmployeeId = 4,
                            DOB = new DateTime(1977, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(1996, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Billy Bob",
                            Lastname = "Jonah",
                            ManagerId = 9
                        },
                        new
                        {
                            EmployeeId = 5,
                            DOB = new DateTime(1994, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2016, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Carter",
                            Lastname = "Hans",
                            ManagerId = 0
                        });
                });

            modelBuilder.Entity("QuarterlySales.Models.Sales", b =>
                {
                    b.Property<int>("SalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesId"));

                    b.Property<double?>("Amount")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("SalesId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            SalesId = 1,
                            Amount = 20.0,
                            EmployeeId = 0,
                            Quarter = 3,
                            Year = 2001
                        },
                        new
                        {
                            SalesId = 2,
                            Amount = 500.0,
                            EmployeeId = 0,
                            Quarter = 3,
                            Year = 2011
                        },
                        new
                        {
                            SalesId = 3,
                            Amount = 200.0,
                            EmployeeId = 0,
                            Quarter = 3,
                            Year = 2012
                        },
                        new
                        {
                            SalesId = 4,
                            Amount = 400.0,
                            EmployeeId = 0,
                            Quarter = 3,
                            Year = 2006
                        },
                        new
                        {
                            SalesId = 5,
                            Amount = 300.0,
                            EmployeeId = 0,
                            Quarter = 4,
                            Year = 2012
                        });
                });

            modelBuilder.Entity("QuarterlySales.Models.Sales", b =>
                {
                    b.HasOne("QuarterlySales.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
